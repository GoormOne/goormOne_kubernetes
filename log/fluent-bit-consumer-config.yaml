apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-consumer-config
  namespace: logging # Fluent Bit를 배포할 네임스페이스
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush        5
        Daemon       Off
        Log_Level    info
        Buffer_Chunk_Size   3M

    # 1. INPUT: MSK의 토픽에서 로그를 읽어옵니다.
    [INPUT]
        Name            kafka
        Brokers         b-1.groommskcluster.3yud5y.c3.kafka.ap-northeast-2.amazonaws.com:9094,b-2.groommskcluster.3yud5y.c3.kafka.ap-northeast-2.amazonaws.com:9094
        Topics          eks-app-logs
        Group_ID        fluent-bit-loki-consumer
        # Kafka 메시지 본문이 JSON 형식이므로, JSON으로 파싱하도록 설정
        Format          json
        # MSK SSL 통신 설정
        rdkafka.security.protocol   ssl

    # 2. FILTER: Kafka에서 읽은 JSON 로그를 가공하여 Loki가 원하는 형태로 만듭니다.
    # Fluent Bit Collector가 kubernetes 메타데이터를 'kubernetes' 라는 JSON 객체 안에 중첩해서 넣었을 경우를 가정합니다.
    [FILTER]
        Name          nest
        Match         *
        Operation     lift
        Nested_under  kubernetes
        Add_prefix    kubernetes_

    # 3. OUTPUT: 가공된 로그를 Loki로 전송합니다.
    [OUTPUT]
        Name          loki
        Match         *
        Host          loki-stack.logging.svc.cluster.local 
        Port          3100
        # Loki에 보낼 레이블(Labels)을 지정합니다. (매우 중요!)
        # 위 FILTER에서 kubernetes_ 로 시작하도록 펼친 필드들을 사용합니다.
        Labels        job=$kubernetes_pod_name, namespace=$kubernetes_namespace_name, app=$kubernetes_labels_app

