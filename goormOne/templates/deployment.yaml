{{- range $serviceName, $service := .Values.services}}
{{- if $service.enabled }}
  {{- if not (and $service.canary $service.canary.enabled) }}
# services : 항목 반복
# $serviceName -> key 이름 (ex, user, order, store)
# $service ->key 에 해당하는 값
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}-service
  labels:
    app: {{ $serviceName }}-service
    component: msa

spec:
  replicas: {{ $service.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ $serviceName }}-service
  template:
    metadata:
      labels:
        app: {{ $serviceName }}-service
        component : msa
    spec:

{{/*    {{- with .Values.nodeSelector }}*/}}
{{/*          nodeSelector:*/}}
{{/*          {{- toYaml . | nindent 8 }}*/}}
{{/*    {{- end }}*/}}
      containers:
        - name: {{ $serviceName }}-service
          image: "{{ $service.image.repository }}:{{ $service.image.tag | default "latest" }}"
          imagePullPolicy: {{ $service.image.pullPolicy | default "IfNotPresent" }}

          ports:
            - name: http
              containerPort: {{ $service.service.targetPort | default 8080 }}

          envFrom:
            - configMapRef:
                name: {{ $.Values.global.configMap.name }}
                      {{- if $.Values.global.secret }}
            - secretRef:
                name: {{ $.Values.global.secret.name }}
                      {{- end }}

          {{- with $service.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $service.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with $service.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $service.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }} # end of if not $service.canary.enabled
{{- end }}
{{- end }}
{{- end }}


{{/*          {{- with .Values.livenessProbe }}*/}}
{{/*          livenessProbe:*/}}
{{/*            {{- toYaml . | nindent 12 }}*/}}
{{/*          {{- end }}*/}}
{{/*          {{- with .Values.readinessProbe }}*/}}
{{/*          readinessProbe:*/}}
{{/*            {{- toYaml . | nindent 12 }}*/}}
{{/*          {{- end }}*/}}



{{/*          {{- with .Values.volumeMounts }}*/}}
{{/*          volumeMounts:*/}}
{{/*            {{- toYaml . | nindent 12 }}*/}}
{{/*          {{- end }}*/}}
{{/*      {{- with .Values.volumes }}*/}}
{{/*      volumes:*/}}
{{/*        {{- toYaml . | nindent 8 }}*/}}
{{/*      {{- end }}*/}}
{{/*      {{- with .Values.nodeSelector }}*/}}
{{/*      nodeSelector:*/}}
{{/*        {{- toYaml . | nindent 8 }}*/}}
{{/*      {{- end }}*/}}
{{/*      {{- with .Values.affinity }}*/}}
{{/*      affinity:*/}}
{{/*        {{- toYaml . | nindent 8 }}*/}}
{{/*      {{- end }}*/}}
{{/*      {{- with .Values.tolerations }}*/}}
{{/*      tolerations:*/}}
{{/*        {{- toYaml . | nindent 8 }}*/}}
{{/*      {{- end }}*/}}
