{{- range $serviceName, $service := .Values.services }}
{{- if $service.enabled }}
{{- if and $service.canary $service.canary.enabled }}
---
# Rollout for Canary deployment
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ $serviceName }}-service-rollout
  labels:
    app: {{ $serviceName }}-service
    component: msa
spec:
  replicas: {{ $service.replicaCount | default 1 }}
  strategy:
    canary:
      stableService: {{ $serviceName }}-service
      canaryService: {{ $serviceName }}-canary-service
      steps:
        - setWeight: {{ $service.canary.initialWeight | default 10 }}
        - pause: { duration: {{ $service.canary.pauseDuration | default "30s" }} }
        - setWeight: {{ $service.canary.middleWeight | default 50 }}
        - pause: { duration: {{ $service.canary.pauseDuration | default "30s" }} }
        - setWeight: 100
      autoPromotionSeconds: {{ $service.canary.autoPromotionSeconds | default 0 }}
      trafficRouting:
        alb:
          ingress: {{ $.Values.globalIngress.name }}
          servicePort: {{ $service.service.port }}
      {{- if $service.canary.analysis }}
      analysis:
        templates:
          - templateName: {{ $serviceName }}-success-rate
        startingStep: 1
        args:
          - name: service-name
            value: {{ $serviceName }}-service
          - name: canary-hash
            valueFrom:
              podTemplateHash: true
      {{- end }}

  selector:
    matchLabels:
      app: {{ $serviceName }}-service
  template:
    metadata:
      labels:
        app: {{ $serviceName }}-service
        component: msa
    spec:
      containers:
        - name: {{ $serviceName }}-service
          image: "{{ $service.image.repository }}:{{ $service.image.tag  }}"
          imagePullPolicy: {{ $service.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: {{ $service.service.targetPort | default 8080 }}
          envFrom:
            - configMapRef:
                name: {{ $.Values.global.configMap.name }}
            {{- if $.Values.global.secret }}
            - secretRef:
                name: {{ $.Values.global.secret.name }}
            {{- end }}
          volumeMounts:
            - name: registries-config
              mountPath: /app/config/registries.yaml
              subPath: registries.yaml
          {{- with $service.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $service.probes.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ $service.service.targetPort | default 8080 }}
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ $service.service.targetPort | default 8080 }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          {{- end }}

      volumes:
        - name: registries-config
          configMap:
            name: argocd-image-updater-registries

{{- if and $service.canary $service.canary.analysis }}
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: {{ $serviceName }}-success-rate
  labels:
    app: {{ $serviceName }}-service
spec:
  args:
    - name: service-name
    - name: canary-hash
  metrics:
    - name: success-rate
      interval: 30s
      count: 5
      successCondition: result[0] >= 0.95
      failureCondition: result[0] < 0.95
      provider:
        prometheus:
          address: http://prometheus.monitoring.svc.cluster.local:9090
          query: >
            (
              sum(rate(http_requests_total{job="{{`{{.args.service-name}}`}}", status!~"5.."}[2m])) /
              sum(rate(http_requests_total{job="{{`{{.args.service-name}}`}}"}[2m]))
            ) or vector(1)
{{- end }}
{{- end }} # end if canary.enabled
{{- end }} # end if $service.enabled
{{- end }} # end range