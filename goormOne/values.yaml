global:
  configMap:
    name: msa-config
  secret:
    name: msa-secret
services:
  user:
    enabled : true #이 서비스를 배포할 것인가?
    replicaCount : 2
    image:
      repository: bleuxsy/user-service
      tag: latest
      pullPolicy : IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080
    
    # 카나리 배포 설정
    canary:
      enabled: true  # 카나리 배포 활성화
      initialWeight: 10  # 초기 트래픽 비율 (10%)
      middleWeight: 50   # 중간 트래픽 비율 (50%)
      pauseDuration: "30s"  # 각 단계별 대기 시간
      autoPromotionEnabled: false  # 자동 프로모션 비활성화 (수동 승인)
      analysis:
        enabled: false  # 메트릭 기반 분석 비활성화 (나중에 Prometheus 설정 후 활성화)

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

  order:
    enabled: true #이 서비스를 배포할 것인가?
    replicaCount: 2
    image:
      repository: bleuxsy/order-service
      tag: latest
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  store:
    enabled : true #이 서비스를 배포할 것인가?
    replicaCount : 2
    image:
      repository: bleuxsy/store-service
      tag: latest
      pullPolicy : IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  auth:
    enabled: true #이 서비스를 배포할 것인가?
    replicaCount: 2
    image:
      repository: bleuxsy/auth-service
      tag: latest
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
    ai:
      enabled: true #이 서비스를 배포할 것인가?
      replicaCount: 2
      image:
        repository: bleuxsy/ai-service
        tag: latest
        pullPolicy: IfNotPresent
      service:
        type: ClusterIP
        port: 80
        targetPort: 8080
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1000m
          memory: 1Gi

  payment:
    enabled: true #이 서비스를 배포할 것인가?
    replicaCount: 2
    image:
      repository: bleuxsy/payment-service
      tag: latest
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi
  common:
    enabled: true #이 서비스를 배포할 것인가?
    replicaCount: 2
    image:
      repository: bleuxsy/common-service
      tag: latest
      pullPolicy: IfNotPresent
    service:
      type: ClusterIP
      port: 80
      targetPort: 8080

    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# ConfigMap configuration
configMap:
  enabled: true
  data:
    SPRING_PROFILES_ACTIVE: "dev"
    SERVER_PORT: "8080"
    # Add other config values as needed

# Secret configuration
secret:
  enabled: true
  stringData:
    DB_USERNAME: "YOUR_DB_USERNAME"
    DB_PASSWORD: "YOUR_DB_PASSWORD"
    REDIS_PASSWORD: "YOUR_REDIS_PASSWORD"
    OPENAI_API_KEY: "YOUR_OPENAI_API_KEY"
    MONGODB_URI: "YOUR_MONGODB_URI"
    MONGODB_NAME: "YOUR_MONGODB_NAME"

# Legacy single service configuration (kept for backward compatibility)
replicaCount: 1
image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: "goormone"
fullnameOverride: "goormone"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

podSecurityContext: {}
securityContext: {}

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}


